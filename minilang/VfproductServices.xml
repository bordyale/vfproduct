<?xml version="1.0" encoding="UTF-8"?>
<!-- Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements. See the NOTICE file distributed 
	with this work for additional information regarding copyright ownership. The ASF licenses this file to you under the Apache License, 
	Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License 
	at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under 
	the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License 
	for the specific language governing permissions and limitations under the License. -->

<simple-methods xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://ofbiz.apache.org/Simple-Method"
	xsi:schemaLocation="http://ofbiz.apache.org/Simple-Method http://ofbiz.apache.org/dtds/simple-methods.xsd">
	<simple-method method-name="createProduct" short-description="Create a Product">
		<check-permission permission="CATALOG" action="_CREATE">
			<alt-permission permission="CATALOG_ROLE" action="_CREATE" />
			<fail-property resource="ProductUiLabels" property="ProductCatalogCreatePermissionError" />
		</check-permission>
		<check-errors />

		<make-value entity-name="Product" value-field="newEntity" />
		<set-nonpk-fields map="parameters" value-field="newEntity" />

		<set from-field="parameters.productId" field="newEntity.productId" />
		<if-empty field="newEntity.productId">
			<sequenced-id sequence-name="Product" field="newEntity.productId" />
			<else>
				<check-id field="newEntity.productId" />
				<check-errors />
				<entity-one entity-name="Product" value-field="dummyProduct">
					<field-map field-name="productId" from-field="parameters.productId" />
				</entity-one>
				<if-not-empty field="dummyProduct">
					<add-error>
						<fail-property resource="CommonErrorUiLabels" property="CommonErrorDuplicateKey" />
					</add-error>
				</if-not-empty>
				<check-errors />
			</else>
		</if-empty>
		<field-to-result field="newEntity.productId" result-name="productId" />

		<now-timestamp field="nowTimestamp" />
		<set from-field="nowTimestamp" field="newEntity.createdDate" />
		<set from-field="nowTimestamp" field="newEntity.lastModifiedDate" />
		<set from-field="userLogin.userLoginId" field="newEntity.lastModifiedByUserLogin" />
		<set from-field="userLogin.userLoginId" field="newEntity.createdByUserLogin" />
		<if-empty field="newEntity.isVariant">
			<set field="newEntity.isVariant" value="N" />
		</if-empty>
		<if-empty field="newEntity.isVirtual">
			<set field="newEntity.isVirtual" value="N" />
		</if-empty>
		<if-empty field="newEntity.billOfMaterialLevel">
			<set field="newEntity.billOfMaterialLevel" value="0" type="Long" />
		</if-empty>

		<create-value value-field="newEntity" />
		
		<!-- Product Group -->
		<make-value entity-name="VfProductGroup" value-field="newEntity2" />
		<set from-field="nowTimestamp" field="newEntity2.createdDate" />
		<set from-field="nowTimestamp" field="newEntity2.lastModifiedDate" />
		<set from-field="userLogin.userLoginId" field="newEntity2.lastModifiedByUserLogin" />
		<set from-field="userLogin.userLoginId" field="newEntity2.createdByUserLogin" />
		<set from-field="newEntity.productId" field="newEntity2.productId" />
		<create-value value-field="newEntity2" />
		

		<!-- if setting the primaryProductCategoryId create a member entity too -->
		<!-- THIS IS REMOVED BECAUSE IT CAUSES PROBLEMS FOR WORKING ON PRODUCTION SITES <if-not-empty field="newEntity.primaryProductCategoryId"> 
			<make-value entity-name="ProductCategoryMember" value-field="newMember"/> <set from-field="productId" map-name="newEntity" to-field-name="productId" 
			to-map-name="newMember"/> <set from-field="primaryProductCategoryId" map-name="newEntity" to-field-name="productCategoryId" to-map-name="newMember"/> 
			<now-timestamp field="nowStamp"/> <set from-field="nowStamp" field="newMember.fromDate"/> <create-value value-field="newMember"/> </if-not-empty> -->

		<!-- if the user has the role limited position, add this product to the limit category/ies -->
		<if-has-permission permission="CATALOG_ROLE" action="_CREATE">
			<entity-and entity-name="ProductCategoryRole" list="productCategoryRoles" filter-by-date="true">
				<field-map field-name="partyId" from-field="userLogin.partyId" />
				<field-map field-name="roleTypeId" value="LTD_ADMIN" />
			</entity-and>

			<iterate list="productCategoryRoles" entry="productCategoryRole">
				<!-- add this new product to the category -->
				<make-value entity-name="ProductCategoryMember" value-field="newLimitMember" />
				<set from-field="newEntity.productId" field="newLimitMember.productId" />
				<set from-field="productCategoryRole.productCategoryId" field="newLimitMember.productCategoryId" />
				<set from-field="nowTimestamp" field="newLimitMember.fromDate" />
				<create-value value-field="newLimitMember" />
			</iterate>
		</if-has-permission>
	</simple-method>
	<simple-method method-name="updateProduct" short-description="Update a Product">
		<set value="updateProduct" field="callingMethodName" />
		<set value="UPDATE" field="checkAction" />
		<call-simple-method method-name="checkProductRelatedPermission" />
		<check-errors />

		<entity-one entity-name="Product" value-field="lookedUpValue" />
		<!-- save this value before overwriting it so we can compare it later -->
		<set from-field="lookedUpValue.primaryProductCategoryId" field="saveIdMap.primaryProductCategoryId" />
		<set-nonpk-fields map="parameters" value-field="lookedUpValue" />

		<now-timestamp field="lookedUpValue.lastModifiedDate" />
		<set from-field="userLogin.userLoginId" field="lookedUpValue.lastModifiedByUserLogin" />

		<store-value value-field="lookedUpValue" />
		
		<!-- Product Group -->
		<entity-one entity-name="VfProductGroup" value-field="lookedUpValue2" />
		<store-value value-field="lookedUpValue2" />

		<!-- if setting the primaryParentCategoryId, create a rollup entity too -->
		<!-- THIS IS REMOVED BECAUSE IT CAUSES PROBLEMS FOR WORKING ON PRODUCTION SITES <if-not-empty field="lookedUpValue.primaryProductCategoryId"> 
			<if-compare-field to-field="saveIdMap.primaryProductCategoryId" field="lookedUpValue.primaryProductCategoryId" operator="equals"> <make-value 
			entity-name="ProductCategoryMember" value-field="newMember"/> <set from-field="productId" map-name="newEntity" to-field-name="productId" 
			to-map-name="newMember"/> <set from-field="primaryProductCategoryId" map-name="newEntity" to-field-name="productCategoryId" to-map-name="newMember"/> 
			<now-timestamp field="newMember.fromDate"/> <create-value value-field="newMember"/> </if-compare-field> </if-not-empty> -->
	</simple-method>

</simple-methods>
